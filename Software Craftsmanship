Software Craftsmanship
    hva er det?
    det faglige håndverket (sammenlign med håndverkere)
    noen har studert data og har en del av dette fra før
    andre er fra andre linjer og har hatt mindre
    uvesentlig - vi kan lære dere det som trengs
    vær nøye!
    gjør dere flid med kodehåndverket!
    BEKK er ikke som alle andre selskaper

Litt om å begynne
    skummelt?
    hva forventes?
    viktigste: nysgjerrighet, lærevillighet, innsatsvilje
    det er nå karrieren begynner!
    presentasjonen = et utvalg prinsipper, teknikker og eksempler på godt og dårlig kodehåndverk

Kodehåndverk = ?

Prinsipper og konsepter
    Navngiving
        tydelig intensjon
        verb vs substantiv
        passelig lengde
        oppgave / eksempel?
        norsk vs engelsk?
        “There are only two hard things in Computer Science: cache invalidation and naming things.”
    Kommentarer
        kommentarer (“The proper use of comments is to compensate for our failure to express our self in code” 
                    [„Clean  Code: A Handbook of Agile Software Craftsmanship” Robert C. Martin])
        det finnes gode og dårlige kommentarer
    Atomiske commits
        en commit er ett stykke arbeid - en feature, en bug, etc.
        commitmeldinger!!!
            7 REGLER
            1. Separate subject from body with a blank line
            2. Limit the subject line to 50 characters
            3. Capitalize the subject line
            4. Do not end the subject line with a period
            5. Use the imperative mood in the subject line
            oppgave på commitmeldinger?
    Kodegjennomgang (code reviews)
        hva er det?
        bilde fra GitHub
        How To Write the Perfect Pull-Request
            (https://github.com/blog/1943-how-to-write-the-perfect-pull-request)
        gode utviklere er rå på å KOMMUNISERE - både med kode og rundt kode



    vedlikeholdbarhet
    vedlikeholdbarhet? (koden kan leve lenge)
        testbarhet
        utvidbarhet
        lesbarhet
        driftbarhet
        dokumentasjon
    navngiving
    norsk vs engelsk?
    
Prinsipper for god kode

SRP - Single Responsibility Principle
    funksjoner, klasser, entiter bør gjøre kun én ting
    hva den gjør må være tydelig
    henger sammen med god navngiving - kommer ofte naturlig

DRY - Dont Repeat Yourself
    ikke skrive det samme to ganger
    mer jobb
    økt vedlikeholdskost
    større kodebase er mindre lesbar

KISS - Keep It Simple Stupid
    ikke overkomplisere
    enkle løsninger er enkle å lese
    simplicity a key design goal

YAGNI - You Aint Gonna Need It

"TEST"






Idé:
    vise et kodeeksempel, spørre hva som er galt / dumt / uheldig her,
    for så og presentere prinsippet bak og diskutere dette.


Clean code is a code that is written by someone who cares
    quote from Michael Feathers







Ressursser:

    Top 9 qualities of clean code
    http://blog.goyello.com/2013/01/21/top-9-principles-clean-code/
    
    Torstein Nicolaysen
    https://drive.google.com/file/d/0B9c7hhH1egrrVExQbVZ1UkN1Y2M/view




